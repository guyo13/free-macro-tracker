<html>
  <title>FMT DB design and TODO</title>
  <head>
    <style>
      body p {
        font-size: 20px;
      }
      .major {
        color: red;
        font-weight: bolder;
      }
      .med {
        color: orange;
        font-weight: bold;
      }
      .minor {
        color: fuchsia;
      }
    </style>
  </head>
  <body>
    <h1>Structure of Data</h1>
    <h2>Profile Object Store</h2>
    <p>
      <b>KEY PATH = "profile_id" autoIncrement==false</b><br />
      profile_id - int <br />
      name - String <br />
      bodyWeight - Number <br />
      bodyWeightUnits - String (either "Kg" or "Lbs") <br />
      bodyWeightKg - Number <br />
      height - Number <br />
      heightUnits - String (either "Cm" or "Inch") <br />
      heightCm - Number <br />
      age - Number //TODO change to and validate as int <br />
      sex - String (either "Male" or "Female") <br />
      bodyfat - float (0-100) <br />
      bodyfatReal - float (0-1) <br />
      activityLevel - String ("Sedentary", "Light", "Moderate", "High", "Very
      High", "Custom") <br />
      activityMultiplier - float <br />
      formula - String ("Katch-McArdle" or "Mifflin-St Jeor") <br />
      bmr - Number <br />
      tdee - Number <br />
      macroSplit - Object
      ({"Calories":Number,"Protein":Number,"Carbohydrate":Number,"Fat":Number})<br />
      lastModified - Date <br />
      tzMinutes - int <br />
      <span class="minor">//TODO - microNutrientGoals</span>
    </p>

    <h2>Units Object Store</h2>
    <p>
      <b>KEY PATH = "name"</b> <br />
      name - String <br />
      type - String, selection of ("mass", "volume", "arbitrary") value_in_grams
      - float if type is mass or translatable to mass else 0<br />
      value_in_ml - float if type is volume or translateable to volume else 0<br />
      description - String <br />
    </p>
    <h2>Nutrients Object Store</h2>
    <p>
      <b>KEY PATH = ["category", "name"]</b> <br />
      name - String <br />
      category - String <br />
      default_unit - String (logically references a Unit's "name") <br />
      help - String <br />
    </p>
    <h2>Foods Object Store</h2>
    <p>
      <b>KEY PATH = "food_id" autoIncrement = true</b> <br />
      food_id - int <br />
      foodName - String <br />
      foodBrand - String <br />
      lastModified - Date <br />
      tzMinutes - int <br />
      referenceServing - Number <br />
      units - String (logically references a Unit "name") <br />
      nutritionalValue - Object
      ({calories-Number,proteins-Number,carbohydrates-Number,fats-Number,additionalNutrients-Object})
      <br />
      additionalNutrients - { "NutrientCategory1": [{"name":String,
      "amount":Number, "unit":String}, ... , {...}], ... , "NutrientCategoryN":
      [{...}, ... ,{...}] } <br />
    </p>

    <h2>Recipes Object Store</h2>
    <p>
      KEY PATH = "recipe_id" autoIncrement = true <br />
      recipe_id - int <br />
      recipeName - String <br />
      recipeDescription - String <br />
      recipeCreator - String <br />
      lastModified - Date <br />
      tzMinutes - int <br />
      referenceServing - Number <br />
      units - String (logically references a Unit's "name") <br />
      ingredients - Array of Food Items <br />
      nutritionalValue - Object (see above) <br />
      preparationSteps - Array of Strings <br />
      videoUrl - String <br />
      website - String <br />
    </p>
    <h2>Meal Entries Object Store</h2>
    <p>
      <span class="major">KEY PATH = ["entry_id"]</span> <br />
      entry_id - int <br />
      profile_id - int (logically references the profile id from profile store)
      <br />
      year - int <br />
      month - int (0-11) <br />
      day - int <br />
      mealName - String <br />
      lastModified - Date <br />
      tzMinutes - int <br />
      consumable_id - int <br />
      consumableName - String <br />
      consumableBrand - String <br />
      consumableType - String <br />
      serving - Number <br />
      units - String (logically references a Unit's "name") <br />
      nutritionalValue - Object (See above) <br />
    </p>

    <h2 class="med">User Settings Object Store - TODO</h2>
    <p>
      KEY PATH = profile_id autoIncrement=false <br />
      profile_id - int <br />
      settings - Object (reduced version of fmtAppInstance) <br />
    </p>
    <h2 class="med">User Goals Object Store - TODO</h2>
    <p>
      KEY PATH = ["profile_id", "year", "month", "day"] autoIncrement=false
      <br />
      profile_id - int <br />
      year - int <br />
      month - int (0-11) <br />
      day - int <br />
      macroSplit <br />
      <span class="minor">//TODO - microSplit, mealSplit</span> <br />
    </p>
    <h1>DB OPERATIONS (TODO):</h1>
    <h2>Profiles:</h2>
    <p>
      <del>Read all profiles (getAll)</del> <br />
      <del>Query profile by profile ID</del> <br />
      <del>Update Profile - NEED TO SEPARATE FROM UI</del> <br />
      <del>Create new Profile - NEED TO SEPARATE FROM UI</del> <br />
    </p>
    <h2>Units:</h2>
    <p>
      <del>Read all units (getAll+cursor)</del> <br />
      <del>Query unit by category and name</del> <br />
      <del>Create new unit</del> <br />
      <del>Update unit</del> <br />
      <del>Delete unit</del> <br />
    </p>
    <h2>Foods:</h2>
    <p>
      <del>Query food by food ID</del> <br />
      <span class="minor">Query food by food name</span> <br />
      <span class="minor">Query food by food brand</span> <br />
      <span class="minor"
        >Query food by nutrient content (maybe impl outside of db)</span
      >
      <br />
      <del>Add new food</del> <br />
      <del>Update food</del> <br />
      <del>Delete food</del> <br />
      <del>Read all foods (openCursor+getAll)</del> <br />
    </p>
    <h2 class="med">Recipes:</h2>
    <p>
      <span class="med">Query recipe by recipe ID</span> <br />
      <span class="med">Query recipe by recipe name</span> <br />
      <span class="med">Query recipe by food name</span> <br />
      <span class="med"
        >Query recipe by nutrient content (maybe impl outside of db)</span
      >
      <br />
      <span class="med">Add new recipe</span> <br />
      <span class="med">Update recipe</span> <br />
      <span class="med">Delete recipe</span> <br />
      <span class="med">Read all recipes (openCursor)</span> <br />
    </p>

    <h2>Nutrients:</h2>
    <p>
      <del
        >Query nutrient by category and name - NEED TO ADD NUTRIENT CATEGORY AS
        KP</del
      >
      <br />
      <del>Read all nutrients (getAll+cursor)</del> <br />
      <del>Add new nutrient</del> <br />
      <del>Update nutrient</del> <br />
      <del>Delete nutrient - NEED TO ADD NUTRIENT CATEGORY AS KP</del> <br />
    </p>
    <h2 class="minor">User settings:</h2>
    <p>
      <span class="minor">Query by profile Id</span> <br />
      <span class="minor">Add new</span> <br />
      <span class="minor">Update</span> <br />
      <span class="minor">Delete</span> <br />
    </p>
    <h2 class="major">Meal Entries:</h2>
    <p>
      <del class="major"
        >Query by profile_id and [year, month, day] (cursor)</del
      >
      - NEED TESTING <br />
      <del class="major"
        >Query by profile id (cursor - same as above with unbounded date
        range)</del
      >
      - NEED TESTING <br />
      <del class="major"
        >Query by entry id (cursor - this is the obvious query)</del
      >
      - NEED TESTING <br />
      <del class="major">Create, update, delete</del> - NEED TESTING <br />
    </p>
  </body>
</html>
